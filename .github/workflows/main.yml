name: mern app
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:

jobs:
    # build-test:
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: checkout code 
    #           uses: actions/checkout@v4
    #         - name:  build backend image
    #           run: docker build -t backend-image ./backend
    #         - name: build frontend image
    #           run: docker build -t frontend-image ./frontend

    push-to-dockerhub:
        runs-on: ubuntu-latest
        steps:
            - name: checkout code 
              uses: actions/checkout@v4
            - name: login to docker hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME}}
                  password: ${{ secrets.DOCKERHUB_PASSWORD }}
            - name: build and push backend image to docker hub
              uses: docker/build-push-action@v6
              with:
                  context: ./backend
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME}}/backend:latest
            - name: build and push frontend image to docker hub
              uses: docker/build-push-action@v6
              with:
                  context: ./frontend
                  push: true
                  tags: ${{ secrets.DOCKERHUB_USERNAME}}/frontend:latest
    deploy:
        needs: push-to-dockerhub
        runs-on: ubuntu-latest
        steps:
            - name: checkout code
              uses: actions/checkout@v4
            - name: ssh into a EC2 instance
              uses: appleboy/ssh-action@v0.1.10
              with:
                  host: ${{ secrets.EC2_HOST }}
                  username: ${{ secrets.EC2_USERNAME }}
                  key: ${{ secrets.EC2_KEY }}
                  script: |
                      echo "Listing files in the current directory:"
                      ls -la
                      scp -r docker-compose.yaml ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu
                      docker pull ${{ secrets.DOCKERHUB_USERNAME}}/backend:latest
                      docker pull ${{ secrets.DOCKERHUB_USERNAME}}/frontend:latest
                      cd /home/ubuntu
                      docker-compose up -d --force-recreate

        